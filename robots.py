import os
import sys
import json
import zulip
import rsvp
import cv2
import config
import server
import cloud
import tools
import dataclass
import remote
import __init__
class Bot:
    """Bot que responde a mensagens no Zulip com GIFs e legendas com base em um keyword."""

    def __init__(self, running, zulip_username, zulip_api_key, key_word, subscribed_streams=None, zulip_site=None):
        self.running = running
        self.key_word = key_word.lower()
        self.subscribed_streams = subscribed_streams or []
        self.client = zulip.Client(zulip_username, zulip_api_key, site=zulip_site)
        self.subscriptions = self.subscribe_to_streams()
        self.rsvp = rsvp.RSVP(key_word)

    @property
    def streams(self):
        """Retorna a lista de streams aos quais o bot está inscrito."""
        if not self.subscribed_streams:
            streams = [{'name': stream['name']} for stream in self.get_all_zulip_streams()]
            return streams
        else:
            streams = [{'name': stream} for stream in self.subscribed_streams]
            return streams

    def get_all_zulip_streams(self):
        """Obtém todos os streams do Zulip usando a API."""
        response = self.client.get_streams()
        if response['result'] == 'success':
            return response['streams']
        else:
            raise RuntimeError('Falha na autenticação com o Zulip')

    def subscribe_to_streams(self):
        """Inscreve o bot nos streams do Zulip."""
        self.client.add_subscriptions(self.streams)

    def process(self, event):
        """Processa eventos recebidos do Zulip."""
        if not self.running.value:
            print("Bot encerrado")
            sys.exit()

        if event['type'] == 'message':
            self.respond(event['message'])

    def respond(self, message):
        """Processa a mensagem recebida e envia uma resposta com GIF e legenda."""
        replies = self.rsvp.process_message(message)

        for reply in replies:
            if reply:
                zulip_util.send_message(reply, self.client)

    def main(self):
        """Chamada de bloqueio que roda o bot indefinidamente, processando eventos recebidos."""
        self.client.call_on_each_event(self.process, ['message', 'realm_user'])
"/**\n * Minified by jsDelivr using Terser v5.39.0.\n * Original file: /npm/@kudoai/chatgpt.js@3.8.1/chatgpt.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\nlocalStorage.alertQueue=JSON.stringify([]),localStorage.notifyProps=JSON.stringify({queue:{topRight:[],bottomRight:[],bottomLeft:[],topLeft:[]}});const chatgpt={endpoints:{assets:\"https://cdn.jsdelivr.net/gh/KudoAI/chatgpt.js\",openAI:{session:\"https://chatgpt.com/api/auth/session\",chats:\"https://chatgpt.com/backend-api/conversations\",chat:\"https://chatgpt.com/backend-api/conversation\",share_create:\"https://chatgpt.com/backend-api/share/create\",share:\"https://chatgpt.com/backend-api/share\",instructions:\"https://chatgpt.com/backend-api/user_system_messages\"}},selectors:{btns:{continue:'button:has(svg[class*=rotate] > path[d^=\"M4.47189\"])',createImage:'button[data-testid=\"composer-create-image\"]',deepResearch:'button[data-testid=\"composer-deep-research\"]',login:\"button[data-testid*=login]\",newChat:'a[href=\"/\"]:has(svg),button:has([d^=\"M3.06957\"])',regen:'button[data-testid*=regenerate],div[role=menuitem] div:has(svg):has(path[d^=\"M3.06957\"])',scroll:'button:has(> svg > path[d^=\"M12 21C11.7348\"])',search:'button[data-testid=\"composer-button-search\"]',reason:'button[data-testid=\"composer-button-reason\"]',send:\"button[data-testid=send-button]\",sidebar:\"button[data-testid*=sidebar-button]\",stop:\"button[data-testid=stop-button]\",upload:'button:has(> svg > path[d^=\"M12 3C12.5523\"])',voice:\"button[data-testid*=composer-speech-button]\"},chatDivs:{convo:\"div[class*=thread]\",msg:\"div[data-message-author-role]\",reply:\"div[data-message-author-role=assistant]\"},chatHistory:\"div#history\",errors:{toast:\"div.toast-root\",txt:\"div[class*=text-error]\"},footer:\"div#thread-bottom-container > div:last-of-type > div, span.text-sm.leading-none\",header:\"div#page-header, main div.sticky:first-of-type\",links:{newChat:'nav a[href=\"/\"]',sidebarItem:\"nav a\"},sidebar:\"div.bg-token-sidebar-surface-primary\",ssgManifest:'script[src*=\"_ssgManifest.js\"]'},actAs:e=>new Promise(((t,o)=>{const n=new XMLHttpRequest;n.open(\"GET\",\"https://cdn.jsdelivr.net/gh/KudoAI/chat-prompts/dist/personas.min.json\",!0),n.send(),n.onload=()=>{if(200!=n.status)return o(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve prompts data.\");const s=JSON.parse(n.responseText).personas;if(!e){console.log(\"\\n%c\ud83e\udd16 chatgpt.js personas\\n\",\"font-family: sans-serif ; font-size: xxx-large ; font-weight: bold\");for(const e of s)console.log(`%c${e.title}`,\"font-family: monospace ; font-size: larger ;\");return t()}const a=s.find((t=>t.title.toLowerCase()==e.toLowerCase()));return a?(chatgpt.send(a.prompt,\"click\"),console.info(`Loading ${e} persona...`),chatgpt.isIdle().then((()=>console.info(\"Persona activated!\"))),t()):o(`\ud83e\udd16 chatgpt.js >> Persona '${e}' was not found!`)}})),activateDarkMode(){document.documentElement.classList.replace(\"light\",\"dark\"),document.documentElement.style.colorScheme=localStorage.theme=\"dark\"},activateLightMode(){document.documentElement.classList.replace(\"dark\",\"light\"),document.documentElement.style.colorScheme=localStorage.theme=\"light\"},alert(e,t,o,n,s){const a=chatgpt.isDarkMode()?\"dark\":\"light\",r=chatgpt.browser.isMobile(),i={dismiss:{click(e){(e.target==e.currentTarget||e.target.closest(\"[class*=-close-btn]\"))&&x()},key(e){if(/^(?: |Space|Enter|Return|Esc)/.test(e.key)&&[32,13,27].includes(e.keyCode))for(const t of v){const o=document.getElementById(t);if(!o||\"none\"==o.style.display)return;if(e.key.startsWith(\"Esc\")||27==e.keyCode)x();else{const t=o.querySelector(\".modal-buttons\").lastChild;t&&(t.click(),e.preventDefault())}}}},drag:{mousedown(e){if(0!=e.button)return;if(!/auto|default/.test(getComputedStyle(e.target).cursor))return;chatgpt.draggingModal=e.currentTarget,e.preventDefault(),Object.assign(chatgpt.draggingModal.style,{transition:\"0.1s\",willChange:\"transform\",transform:\"scale(1.05)\"}),document.body.style.cursor=\"grabbing\",[...chatgpt.draggingModal.children].forEach((e=>e.style.pointerEvents=\"none\")),[\"mousemove\",\"mouseup\"].forEach((e=>document.addEventListener(e,i.drag[e])));const t=chatgpt.draggingModal.getBoundingClientRect();i.drag.offsetX=e.clientX-t.left+21,i.drag.offsetY=e.clientY-t.top+12},mousemove(e){if(!chatgpt.draggingModal)return;const t=e.clientX-i.drag.offsetX,o=e.clientY-i.drag.offsetY;Object.assign(chatgpt.draggingModal.style,{left:`${t}px`,top:`${o}px`})},mouseup(){Object.assign(chatgpt.draggingModal.style,{cursor:\"inherit\",transition:\"inherit\",willChange:\"auto\",transform:\"scale(1)\"}),document.body.style.cursor=\"\",[...chatgpt.draggingModal.children].forEach((e=>e.style.pointerEvents=\"\")),[\"mousemove\",\"mouseup\"].forEach((e=>document.removeEventListener(e,i.drag[e]))),chatgpt.draggingModal=null}}},c=document.createElement(\"div\");c.id=Math.floor(1e6*chatgpt.randomFloat())+Date.now(),c.classList.add(\"chatgpt-modal\");const l=document.createElement(\"div\"),d=document.createElement(\"h2\"),g=document.createElement(\"p\"),h=1739338889852;let p=document.querySelector(\"#chatgpt-modal-style\");(!p||parseInt(p.getAttribute(\"last-updated\"),10)<h)&&(p||(p=document.createElement(\"style\"),p.id=\"chatgpt-modal-style\",p.setAttribute(\"last-updated\",h.toString()),document.head.append(p)),p.textContent=`.chatgpt-modal { /* vars */\\n                      --transition: opacity 0.65s cubic-bezier(.165,.84,.44,1), /* for fade-in */\\n                                    transform 0.55s cubic-bezier(.165,.84,.44,1) ; /* for move-in */\\n                      --bg-transition: background-color 0.25s ease ; /* for bg dim */\\n                      --btn-transition: transform 0.1s ease-in-out, box-shadow 0.1s ease-in-out ; /* for smooth zoom */\\n                      --btn-shadow: 2px 1px ${\"dark\"==a?\"54px #00cfff\":\"30px #9cdaff\"}}.no-mobile-tap-outline { outline: none ; -webkit-tap-highlight-color: transparent }.chatgpt-modal {\\n                      pointer-events: auto ; /* override any disabling from site modals (like guest login spam) */\\n                      position: fixed ; top: 0 ; left: 0 ; width: 100% ; height: 100% ; /* expand to full view-port */\\n                      display: flex ; justify-content: center ; align-items: center ; z-index: 9999 ; /* align */\\n                      transition: var(--bg-transition) ; /* for bg dim */\\n                          -webkit-transition: var(--bg-transition) ; -moz-transition: var(--bg-transition) ;\\n                          -o-transition: var(--bg-transition) ; -ms-transition: var(--bg-transition) }.chatgpt-modal > div {\\n                      position: absolute ; /* to be click-draggable */\\n                      opacity: 0 ; /* to fade-in */\\n                      font-family: -apple-system, system-ui, BlinkMacSystemFont, Segoe UI, Roboto,\\n                                   Oxygen-Sans, Ubuntu, Cantarell, Helvetica Neue, sans-serif ;\\n                      padding: 20px ; margin: 12px 23px ; font-size: 20px ;\\n                      color: ${\"dark\"==a?\"white\":\"black\"};\\n                      background-color: ${\"dark\"==a?\"black\":\"white\"};\\n                      border: 1px solid ${\"dark\"==a?\"white\":\"#b5b5b5\"};\\n                      transform: translateX(-3px) translateY(7px) ; /* offset to move-in from */\\n                      max-width: 75vw ; word-wrap: break-word ; border-radius: 15px ;\\n                      --shadow: 0 30px 60px rgba(0,0,0,0.12) ; box-shadow: var(--shadow) ;\\n                          -webkit-box-shadow: var(--shadow) ; -moz-box-shadow: var(--shadow) ;\\n                      user-select: none ; -webkit-user-select: none ; -moz-user-select: none ;\\n                          -o-user-select: none ; -ms-user-select: none ;\\n                      transition: var(--transition) ; /* for fade-in + move-in */\\n                          -webkit-transition: var(--transition) ; -moz-transition: var(--transition) ;\\n                          -o-transition: var(--transition) ; -ms-transition: var(--transition) }\\n                  .chatgpt-modal h2 { font-weight: bold ; font-size: 24px ; margin-bottom: 9px }\\n                  .chatgpt-modal a { color: ${\"dark\"==a?\"#00cfff\":\"#1e9ebb\"}}\\n                  .chatgpt-modal a:hover { text-decoration: underline }\\n                  .chatgpt-modal.animated > div {\\n                      z-index: 13456 ; opacity: 0.98 ; transform: translateX(0) translateY(0) }\\n                  @keyframes alert-zoom-fade-out {\\n                      0% { opacity: 1 } 50% { opacity: 0.25 ; transform: scale(1.05) }\\n                      100% { opacity: 0 ; transform: scale(1.35) }}.modal-buttons {\\n                        display: flex ; justify-content: flex-end ; margin: 20px -5px -3px 0 ;\\n                        ${r?\"flex-direction: column-reverse\":\"\"}}\\n                  .chatgpt-modal button {\\n                      font-size: 14px ; text-transform: uppercase ; cursor: crosshair ;\\n                      margin-left: ${r?0:10}px ; padding: ${r?15:8}px 18px ;\\n                      ${r?\"margin-top: 5px ; margin-bottom: 3px ;\":\"\"}\\n                      border-radius: 0 ; border: 1px solid ${\"dark\"==a?\"white\":\"black\"};\\n                      transition: var(--btn-transition) ;\\n                          -webkit-transition: var(--btn-transition) ; -moz-transition: var(--btn-transition) ;\\n                          -o-transition: var(--btn-transition) ; -ms-transition: var(--btn-transition) }\\n                  .chatgpt-modal button:hover {\\n                      transform: scale(1.055) ; color: black ;\\n                      background-color: #${\"dark\"==a?\"00cfff\":\"9cdaff\"};\\n                      box-shadow: var(--btn-shadow) ;\\n                          -webkit-box-shadow: var(--btn-shadow) ; -moz-box-shadow: var(--btn-shadow) }\\n                  .primary-modal-btn {\\n                      border: 1px solid ${\"dark\"==a?\"white\":\"black\"};\\n                      background: ${\"dark\"==a?\"white\":\"black\"};\\n                      color: ${\"dark\"==a?\"black\":\"white\"}}\\n                  .modal-close-btn {\\n                      cursor: pointer ; width: 29px ; height: 29px ; border-radius: 17px ;\\n                      float: right ; position: relative ; right: -6px ; top: -5px }\\n                  .modal-close-btn svg { margin: 10px } /* center SVG for hover underlay */\\n                  .modal-close-btn:hover { background-color: #f2f2f2${\"dark\"==a?\"00\":\"\"}}.chatgpt-modal .checkbox-group { margin: 5px 0 -8px 5px }\\n                  .chatgpt-modal input[type=checkbox] {\\n                      cursor: pointer ; transform: scale(0.7) ; margin-right: 5px ;\\n                      border: 1px solid ${\"dark\"==a?\"white\":\"black\"}}\\n                  .chatgpt-modal input[type=checkbox]:checked {\\n                      background-color: black ; position: inherit ;\\n                      border: 1px solid ${\"dark\"==a?\"white\":\"black\"}}\\n                  .chatgpt-modal input[type=checkbox]:focus {\\n                      outline: none ; box-shadow: none ; -webkit-box-shadow: none ; -moz-box-shadow: none }\\n                  .chatgpt-modal .checkbox-group label {\\n                      cursor: pointer ; font-size: 14px ; color: ${\"dark\"==a?\"#e1e1e1\":\"#1e1e1e\"}}`),d.textContent=e||\"\",g.innerText=t||\"\",chatgpt.renderHTML(g);const u=document.createElement(\"div\");u.classList.add(\"modal-buttons\",\"no-mobile-tap-outline\"),o&&(Array.isArray(o)||(o=[o]),o.forEach((e=>{const t=document.createElement(\"button\");t.textContent=e.name.replace(/[_-]\\w/g,(e=>e.slice(1).toUpperCase())).replace(/([A-Z])/g,\" $1\").replace(/^\\w/,(e=>e.toUpperCase())),t.onclick=()=>{x(),e()},u.insertBefore(t,u.firstChild)})));const m=document.createElement(\"button\");m.textContent=o?\"Dismiss\":\"OK\",u.insertBefore(m,u.firstChild),u.lastChild.classList.add(\"primary-modal-btn\");const f=document.createElement(\"div\");if(n){f.classList.add(\"checkbox-group\");const e=n,t=document.createElement(\"input\");t.type=\"checkbox\",t.onchange=e;const o=document.createElement(\"label\");o.onclick=()=>{t.checked=!t.checked,e()},o.textContent=e.name[0].toUpperCase()+e.name.slice(1).replace(/([A-Z])/g,((e,t)=>\" \"+t.toLowerCase())).replace(/\\b(\\w+)nt\\b/gi,\"$1n't\").trim(),f.append(t),f.append(o)}const y=document.createElement(\"div\");y.title=\"Close\",y.classList.add(\"modal-close-btn\",\"no-mobile-tap-outline\");const b=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");b.setAttribute(\"height\",\"10px\"),b.setAttribute(\"viewBox\",\"0 0 14 14\"),b.setAttribute(\"fill\",\"none\");const w=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");w.setAttribute(\"fill-rule\",\"evenodd\"),w.setAttribute(\"clip-rule\",\"evenodd\"),w.setAttribute(\"fill\",chatgpt.isDarkMode()?\"white\":\"black\"),w.setAttribute(\"d\",\"M13.7071 1.70711C14.0976 1.31658 14.0976 0.683417 13.7071 0.292893C13.3166 -0.0976312 12.6834 -0.0976312 12.2929 0.292893L7 5.58579L1.70711 0.292893C1.31658 -0.0976312 0.683417 -0.0976312 0.292893 0.292893C-0.0976312 0.683417 -0.0976312 1.31658 0.292893 1.70711L5.58579 7L0.292893 12.2929C-0.0976312 12.6834 -0.0976312 13.3166 0.292893 13.7071C0.683417 14.0976 1.31658 14.0976 1.70711 13.7071L7 8.41421L12.2929 13.7071C12.6834 14.0976 13.3166 14.0976 13.7071 13.7071C14.0976 13.3166 14.0976 12.6834 13.7071 12.2929L8.41421 7L13.7071 1.70711Z\"),b.append(w),y.append(b),l.append(y,d,g,f,u),l.style.width=`${s||458}px`,c.append(l),document.body.append(c);let v=JSON.parse(localStorage.alertQueue);v.push(c.id),localStorage.alertQueue=JSON.stringify(v),c.style.display=\"none\",1==v.length&&(c.style.display=\"\",setTimeout((()=>{l.parentNode.style.backgroundColor=`rgba(67,70,72,${\"dark\"==a?.62:.33})`,l.parentNode.classList.add(\"animated\")}),100)),[c,y,b,m].forEach((e=>e.onclick=i.dismiss.click)),document.addEventListener(\"keydown\",i.dismiss.key),l.onmousedown=i.drag.mousedown;const x=()=>{c.style.backgroundColor=\"transparent\",l.style.animation=\"alert-zoom-fade-out 0.165s ease-out\",l.onanimationend=()=>{if(c.remove(),v=JSON.parse(localStorage.alertQueue),v.shift(),localStorage.alertQueue=JSON.stringify(v),document.removeEventListener(\"keydown\",i.dismiss.key),v.length>0){const e=document.getElementById(v[0]);setTimeout((()=>{e.style.display=\"\",setTimeout((()=>e.classList.add(\"animated\")),100)}),500)}}};return c.id},askAndGetReply:async e=>(chatgpt.send(e),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")),autoRefresh:{activate(e){if(this.isActive)return console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Auto refresh already active!`);const t=this;this.toggle.refreshFrame();const o=e=>{const n=Math.max(2,Math.floor(21*chatgpt.randomFloat()-10));t.isActive=setTimeout((()=>{const n=document.querySelector(chatgpt.selectors.ssgManifest);n&&(document.querySelector(\"#refresh-frame\").src=n.src+\"?\"+Date.now(),console.log(`\u21bb ChatGPT >> [${t.nowTimeStamp()}] ChatGPT session refreshed`)),o(e)}),1e3*(e+n))};o(e?parseInt(e,10):30),console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Auto refresh activated`),navigator.userAgent.includes(\"Chrome\")&&void 0!==document.hidden&&document.addEventListener(\"visibilitychange\",this.toggle.beacons)},deactivate(){this.isActive?(this.toggle.refreshFrame(),document.removeEventListener(\"visibilitychange\",this.toggle.beacons),clearTimeout(this.isActive),this.isActive=null,console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Auto refresh de-activated`)):console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Auto refresh already inactive!`)},nowTimeStamp(){const e=new Date,t=e.getHours()%12||12;let o=e.getMinutes(),n=e.getSeconds();o<10&&(o=\"0\"+o),n<10&&(n=\"0\"+n);return`${t}:${o}:${n} ${e.getHours()<12?\"AM\":\"PM\"}`},toggle:{beacons(){chatgpt.autoRefresh.beaconID?(clearInterval(chatgpt.autoRefresh.beaconID),chatgpt.autoRefresh.beaconID=null,console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Beacons de-activated`)):(chatgpt.autoRefresh.beaconID=setInterval((()=>{navigator.sendBeacon(\"https://httpbin.org/post\",new Uint8Array),console.log(`\u21bb ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Beacon sent`)}),9e4),console.log(`ChatGPT >> [${chatgpt.autoRefresh.nowTimeStamp()}] Beacons activated`))},refreshFrame(){let e=document.querySelector(\"#refresh-frame\");e?e.remove():(e=Object.assign(document.createElement(\"iframe\"),{id:\"refresh-frame\",style:\"display: none\"}),document.head.prepend(e))}}},browser:{isLightMode:()=>window.matchMedia?.(\"(prefers-color-scheme: light)\")?.matches,isDarkMode:()=>window.matchMedia?.(\"(prefers-color-scheme: dark)\")?.matches,isChromium:()=>!!JSON.stringify(navigator.userAgentData?.brands)?.includes(\"Chromium\"),isChrome:()=>!!JSON.stringify(navigator.userAgentData?.brands)?.includes(\"Chrome\"),isEdge:()=>!!JSON.stringify(navigator.userAgentData?.brands)?.includes(\"Edge\"),isBrave:()=>!!JSON.stringify(navigator.userAgentData?.brands)?.includes(\"Brave\"),isFirefox:()=>navigator.userAgent.includes(\"Firefox\"),isFullScreen(){const e=navigator.userAgent;return e.includes(\"Chrome\")?window.matchMedia(\"(display-mode: fullscreen)\").matches:e.includes(\"Firefox\")?window.fullScreen:/MSIE|rv:/.test(e)?document.msFullscreenElement:document.webkitIsFullScreen},isMobile:()=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},clearChats:async()=>new Promise(((e,t)=>chatgpt.getAccessToken().then((o=>{const n=new XMLHttpRequest;n.open(\"PATCH\",chatgpt.endpoints.openAI.chats,!0),n.setRequestHeader(\"Content-Type\",\"application/json\"),n.setRequestHeader(\"Authorization\",\"Bearer \"+o),n.onload=()=>{if(200!=n.status)return t(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot clear chats.\");console.info(\"Chats successfully cleared\"),e()},n.send(JSON.stringify({is_visible:!1}))})).catch((e=>t(new Error(e.message)))))),code:{execute:async e=>e?\"string\"!=typeof e?console.error(\"Code argument must be a string!\"):(chatgpt.send(\"Display the output as if you were terminal:\\n\\n\"+e),console.info(\"Executing code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))):console.error(\"Code argument not supplied. Pass some code!\"),extract(e){const t=e.match(/(?<=```.*\\n)[\\s\\S]*?(?=```)/g);return t?t[t.length-1]:e},async isIdle(e=null){const t={childList:!0,subtree:!0},o=e?new Promise((t=>setTimeout((()=>t(!1)),e))):null,n=(async()=>{await new Promise((e=>{document.querySelector(chatgpt.selectors.chatDivs.msg)?e():new MutationObserver(((t,o)=>{document.querySelector(chatgpt.selectors.chatDivs.msg)&&(o.disconnect(),e())})).observe(document.body,t)})),await new Promise((e=>new MutationObserver(((t,o)=>{chatgpt.getStopBtn()&&(o.disconnect(),e())})).observe(document.body,{childList:!0,subtree:!0})));const e=document.querySelectorAll(chatgpt.selectors.chatDivs.reply),o=e[e.length-1];return await new Promise((e=>new MutationObserver(((t,n)=>{o?.querySelector(\"pre\")&&(n.disconnect(),e())})).observe(document.body,t))),new Promise((e=>new MutationObserver(((t,n)=>{!o?.querySelector(\"pre\")?.nextElementSibling&&chatgpt.getStopBtn()||(n.disconnect(),e(!0))})).observe(document.body,t)))})();return await(o?Promise.race([n,o]):n)},minify:async e=>e?\"string\"!=typeof e?console.error(\"Code argument must be a string!\"):(chatgpt.send(\"Minify the following code:\\n\\n\"+e),console.info(\"Minifying code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))):console.error(\"Code argument not supplied. Pass some code!\"),obfuscate:async e=>e?\"string\"!=typeof e?console.error(\"Code argument must be a string!\"):(chatgpt.send(\"Obfuscate the following code:\\n\\n\"+e),console.info(\"Obfuscating code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))):console.error(\"Code argument not supplied. Pass some code!\"),async refactor(e,t){if(!e)return console.error(\"Code (1st) argument not supplied. Pass some code!\");for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string.`);return chatgpt.send(`Refactor the following code for ${t||\"brevity\"}:\\n\\n${e}`),console.info(\"Refactoring code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))},review:async e=>e?\"string\"==typeof e?console.error(\"Code argument must be a string!\"):(chatgpt.send(\"Review the following code for me:\\n\\n\"+e),console.info(\"Reviewing code...\"),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")):console.error(\"Code argument not supplied. Pass some code!\"),unminify:async e=>e?\"string\"!=typeof e?console.error(\"Code argument must be a string!\"):(chatgpt.send(\"Unminify the following code.:\\n\\n\"+e),console.info(\"Unminifying code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))):console.error(\"Code argument not supplied. Pass some code!\"),async write(e,t){if(!e)return console.error(\"Prompt (1st) argument not supplied. Pass a prompt!\");if(!t)return console.error(\"outputLang (2nd) argument not supplied. Pass a language!\");for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string.`);return chatgpt.send(`${e}\\n\\nWrite this as code in ${t}`),console.info(\"Writing code...\"),await chatgpt.isIdle(),chatgpt.code.extract(await chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"))}},continue(){chatgpt.response.continue()},detectLanguage:async e=>e?\"string\"!=typeof e?console.error(\"Text argument must be a string!\"):(chatgpt.send(`Detect the language of the following text:\\n\\n${e}\\n\\nOnly respond with the name of the language`),console.info(\"Reviewing text...\"),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")):console.error(\"Text argument not supplied. Pass some text!\"),executeCode(){chatgpt.code.execute()},async exportChat(e,t){e=e?Number.isInteger(e)||/^\\d+$/.test(e)?parseInt(e,10):e:\"active\",t=t.toLowerCase()||\"html\",console.info(\"Generating transcript...\");let o,n=\"\";if(/te?xt/.test(t)){const t=new Date;if(o=`ChatGPT_${t.getDate().toString().padStart(2,\"0\")}-${(t.getMonth()+1).toString().padStart(2,\"0\")}-${t.getFullYear()}_${t.getHours().toString().padStart(2,\"0\")}-${t.getMinutes().toString().padStart(2,\"0\")}.txt`,\"active\"==e&&/\\/\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/.test(window.location.href)){const e=document.querySelectorAll(chatgpt.selectors.chatDivs.convo);if(!e.length)return console.error(\"Chat is empty!\");const t=[];let o=!0;e.forEach((e=>{const n=o?\"USER\":\"CHATGPT\";o=!o;const s=[...e.childNodes].map((e=>e.innerText)).join(\"\\n\\n\").replace(\"Copy code\",\"\");t.push(`${n}: ${s}`)})),n=t.join(\"\\n\\n\")}else for(const t of await chatgpt.getChatData(e,\"msg\",\"both\",\"all\"))n+=`USER: ${t.user}\\n\\nCHATGPT: ${t.chatgpt}\\n\\n`}else{const t=await fetch(await chatgpt.shareChat(e)),s=await t.text(),a=(new DOMParser).parseFromString(s,\"text/html\");o=`${a.querySelector(\"title\").textContent||\"ChatGPT conversation\"}.html`;a.querySelectorAll(\"link[rel=stylesheet]\").forEach((e=>{const t=e.getAttribute(\"href\");t?.startsWith(\"/\")&&e.setAttribute(\"href\",\"https://chat.openai.com\"+t)})),n=(new XMLSerializer).serializeToString(a)}if(console.info(`Exporting transcript as ${t.toUpperCase()}...`),\"pdf\"==t){n=n.replace(/<svg.*?<\\/svg>/g,(e=>`<img src=\"${\"data:image/svg+xml,\"+encodeURIComponent(e)}\">`));const e=window.open(\"\",\"\",\"toolbar=0, location=0, menubar=0, height=600, width=800\");e.document.write(n),setTimeout((()=>{e.print({toPDF:!0})}),100)}else{if(\"md\"==t){n=/<.*<h1(.|\\n)*?href=\".*?continue[^\"]*\".*?\\/a>.*?<[^/]/.exec(n)[1]||n,o=o.replace(\".html\",\".md\")}const e=new Blob([n],{type:\"text/\"+(\"html\"==t?\"html\":\"md\"==t?\"markdown\":\"plain\")}),s=document.createElement(\"a\"),a=URL.createObjectURL(e);s.href=a,s.download=o,document.body.append(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(a)}},extractCode(){chatgpt.code.extract()},focusChatbar(){chatgpt.getChatBox()?.focus()},footer:{get:()=>document.querySelector(chatgpt.selectors.footer),hide(){const e=chatgpt.footer.get();return e?\"hidden\"==e.style.visibility?console.info(\"Footer already hidden!\"):void(e.style.display=\"none\"):console.error(\"Footer element not found!\")},show(){const e=chatgpt.footer.get();return e?\"hidden\"!=e.style.visibility?console.info(\"Footer already shown!\"):void(e.style.display=\"inherit\"):console.error(\"Footer element not found!\")}},generateRandomIP(){const e=Array.from({length:4},(()=>Math.floor(256*chatgpt.randomFloat()))).join(\".\");return console.info(\"IP generated: \"+e),e},get(e,t=\"\"){if(\"string\"!=typeof e||\"string\"!=typeof t)throw new TypeError(\"Invalid arguments. Both arguments must be strings.\");if(!cjsTargetTypes.includes(e.toLowerCase()))throw new Error(`Invalid targetType: ${e}. Valid values are: ${JSON.stringify(cjsTargetTypes)}`);const o=[],n=new RegExp(`^get(.*)${e}$`,\"i\");for(const e in chatgpt)\"function\"==typeof chatgpt[e]&&n.test(e)&&o.push(e.replace(n,\"$1\").toLowerCase());if(!o.includes(t.toLowerCase()))throw new Error(`Invalid targetName: ${t}. `+(o.length>0?\"Valid values are: \"+JSON.stringify(o):\"targetType \"+e.toLowerCase()+\" does not require additional options.\"));const s=(\"get\"+t+e).toLowerCase();return this[Object.keys(this).find((e=>e.toLowerCase()==s))]()},getAccessToken:()=>new Promise(((e,t)=>{if(chatgpt.accessToken&&Date.parse(chatgpt.accessToken.expireDate)-Date.parse(new Date)>=0)return e(chatgpt.accessToken.token);const o=new XMLHttpRequest;o.open(\"GET\",chatgpt.endpoints.openAI.session,!0),o.setRequestHeader(\"Content-Type\",\"application/json\"),o.onload=()=>{if(200!=o.status)return t(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve access token.\");console.info(`Token expiration: ${new Date(JSON.parse(o.responseText).expires).toLocaleString().replace(\",\",\" at\")}`),chatgpt.accessToken={token:JSON.parse(o.responseText).accessToken,expireDate:JSON.parse(o.responseText).expires},e(chatgpt.accessToken.token)},o.send()})),getAccountDetails(...e){const t=[\"email\",\"id\",\"image\",\"name\",\"picture\"];e=arguments[0]?Array.isArray(arguments[0])?arguments[0]:Array.from(arguments):t;for(const o of e)if(!t.includes(o))return console.error(`Invalid detail arg '${o}' supplied. Valid details are:\\n                    [${t}]`);return new Promise(((t,o)=>{const n=new XMLHttpRequest;n.open(\"GET\",chatgpt.endpoints.openAI.session,!0),n.setRequestHeader(\"Content-Type\",\"application/json\"),n.onload=()=>{if(200==n.status){const o=JSON.parse(n.responseText).user,s={};for(const t of e)s[t]=o[t];return t(s)}return o(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve account details.\")},n.send()}))},getChatBox:()=>document.getElementById(\"prompt-textarea\"),getChatData(e=1,t=\"all\",o=\"all\",n=\"all\"){const s=[\"all\",\"id\",\"title\",\"create_time\",\"update_time\",\"msg\"],a=[\"all\",\"both\",\"user\",\"chatgpt\"];e=e?Number.isInteger(e)||/^\\d+$/.test(e)?0==parseInt(e,10)?0:parseInt(e,10)-1:e:\"active\",t=[\"all\",\"\"].includes(t)?s.filter((e=>/^(?!all$|msg$).*/.test(e))):Array.isArray(t)?t:[t],o=o?a.includes(o)?o:\"invalid\":\"all\",n=Number.isInteger(n)||/^\\d+$/.test(n)?0==parseInt(n,10)?0:parseInt(n,10)-1:[\"all\",\"latest\"].includes(n.toLowerCase())?n.toLowerCase():n?\"invalid\":\"all\";for(const e of t)if(!s.includes(e))return console.error(`Invalid detail arg '${e}' passed. Valid details are:\\n                    [${s}]`);if(\"invalid\"==o)return console.error(`Invalid sender arg passed. Valid senders are:\\n                    [${a}]`);if(\"invalid\"==n)return console.error(\"Invalid msgToGet arg passed. Valid msg's to get are:\\n                    [ 'all' | 'latest' | index of msg to get ]\");const r=(t,o)=>{const n=/\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}/;return new Promise(((s,a)=>{const r=new XMLHttpRequest;r.open(\"GET\",chatgpt.endpoints.openAI.chats,!0),r.setRequestHeader(\"Content-Type\",\"application/json\"),r.setRequestHeader(\"Authorization\",\"Bearer \"+t),r.onload=()=>{if(200!=r.status)return a(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve chat details.\");const t=JSON.parse(r.responseText).items;if(t.length<=0)return a(\"\ud83e\udd16 chatgpt.js >> Chat list is empty.\");const i={};if(Number.isInteger(e)||\"latest\"==e||\"active\"==e&&!new RegExp(`/${n.source}$`).test(location.href)){if((e=Number.isInteger(e)?e:0)>t.length)return a(`\ud83e\udd16 chatgpt.js >> Chat with index ${e+1} is out of bounds. Only ${t.length} chats exist!`);for(const n of o)i[n]=t[e][n];return s(i)}const c=\"active\"==e||new RegExp(`^${n.source}$`).test(e)?\"id\":\"title\";let l,d;for(\"active\"==e&&(e=n.exec(window.location.href)[0]),l=0;l<t.length;l++)if(t[l][c]==e){d=!0;break}if(!d)return a(`\ud83e\udd16 chatgpt.js >> No chat with ${c} = ${e} found.`);for(const e of o)i[e]=t[l][e];return s(i)},r.send()}))};return new Promise((e=>chatgpt.getAccessToken().then((s=>e(t.includes(\"msg\")?(e=>new Promise(((t,s)=>{const a=new XMLHttpRequest;r(e,[\"id\"]).then((r=>{a.open(\"GET\",`${chatgpt.endpoints.openAI.chat}/${r.id}`,!0),a.setRequestHeader(\"Content-Type\",\"application/json\"),a.setRequestHeader(\"Authorization\",\"Bearer \"+e),a.onload=()=>{if(200!=a.status)return s(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve chat messages.\");const e=JSON.parse(a.responseText).mapping,r=[],i=[],c=[];for(const t in e)null!=e[t].message&&\"user\"==e[t].message.author.role&&r.push({id:e[t].id,msg:e[t].message});if(r.sort(((e,t)=>e.msg.create_time-t.msg.create_time)),parseInt(n,10)+1>r.length)return s(`\ud83e\udd16 chatgpt.js >> Message/response with index ${n+1} is out of bounds. Only ${r.length} messages/responses exist!`);for(const t of r){let o=[];for(const n in e)null!=e[n].message&&\"assistant\"==e[n].message.author.role&&e[n].parent==t.id&&o.push(e[n].message);o.sort(((e,t)=>e.create_time-t.create_time)),o=o.map((e=>{switch(e.content.content_type){case\"code\":return e.content.text;case\"text\":return e.content.parts[0];default:return}})),o=1==o.length?o[0]:o,i.push(o)}if(\"user\"==o)for(const e in r)c.push(r[e].msg.content.parts[0]);else if(\"chatgpt\"==o)for(const e of i)c.push(\"latest\"==n?i[i.length-1]:e);else{let e=0;for(const t in r)c.push({user:r[t].msg.content.parts[0],chatgpt:\"latest\"==n?i[e][i[e].length-1]:i[e]}),e++}return t(\"all\"==n?c:\"latest\"==n?c[c.length-1]:c[n])},a.send()}))})))(s):r(s,t))))))},getChatInput:()=>chatgpt.getChatBox().firstChild.innerText,getContinueButton:()=>document.querySelector(chatgpt.selectors.btns.continue),getErrorMsg:()=>document.querySelector(`${chatgpt.selectors.errors.txt}:last-of-type`)?.innerText,getFooterDiv:()=>chatgpt.footer.get(),getHeaderDiv:()=>chatgpt.header.get(),getLastPrompt:()=>chatgpt.getChatData(\"active\",\"msg\",\"user\",\"latest\"),getLastResponse:()=>chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"),getLoginButton:()=>document.querySelector(chatgpt.selectors.btns.login),getNewChatButton:()=>document.querySelector(chatgpt.selectors.btns.newChat),getNewChatLink:()=>document.querySelector(chatgpt.selectors.links.newChat),getRegenerateButton:()=>document.querySelector(chatgpt.selectors.btns.regen),getResponse(){return chatgpt.response.get(...arguments)},getResponseFromAPI:(e,t)=>chatgpt.response.getFromAPI(e,t),getResponseFromDOM:e=>chatgpt.response.getFromDOM(e),getScrollToBottomButton:()=>document.querySelector(chatgpt.selectors.btns.scroll),getSendButton:()=>document.querySelector(chatgpt.selectors.btns.send),getStopButton:()=>document.querySelector(chatgpt.selectors.btns.stop),getUserLanguage:()=>navigator.languages[0]||navigator.language||navigator.browserLanguage||navigator.systemLanguage||navigator.userLanguage||\"\",getVoiceButton:()=>document.querySelector(chatgpt.selectors.btns.voice),header:{get:()=>document.querySelector(chatgpt.selectors.header),hide(){chatgpt.header.get().style.display=\"none\"},show(){chatgpt.header.get().style.display=\"flex\"}},hideFooter(){chatgpt.footer.hide()},hideHeader(){chatgpt.header.hide()},history:{async isLoaded(e=null){const t=e?new Promise((t=>setTimeout((()=>t(!1)),e))):null,o=new Promise((e=>{document.querySelector(chatgpt.selectors.chatHistory)?e(!0):new MutationObserver(((t,o)=>{document.querySelector(chatgpt.selectors.chatHistory)&&(o.disconnect(),e(!0))})).observe(document.documentElement,{childList:!0,subtree:!0})}));return await(t?Promise.race([o,t]):o)}},instructions:{add(e,t){if(!e)return console.error(\"Please provide an instruction\");if(\"string\"!=typeof e)return console.error(\"Instruction must be a string\");const o=[\"user\",\"chatgpt\"];return t?\"string\"!=typeof t?console.error(\"Target must be a string\"):(t=t.toLowerCase(),o.includes(t)?(e=`\\n\\n${e}`,new Promise((o=>{chatgpt.getAccessToken().then((async n=>{const s=await this.fetchData();return\"user\"==t?s.about_user_message+=e:\"chatgpt\"==t&&(s.about_model_message+=e),await this.sendRequest(\"POST\",n,s),o()}))}))):console.error(`Invalid target ${t}. Valid targets are [${o}]`)):console.error(\"Please provide a valid target!\")},clear(e){const t=[\"user\",\"chatgpt\"];return e?\"string\"!=typeof e?console.error(\"Target must be a string\"):(e=e.toLowerCase(),t.includes(e)?new Promise((t=>{chatgpt.getAccessToken().then((async o=>{const n=await this.fetchData();return\"user\"==e?n.about_user_message=\"\":\"chatgpt\"==e&&(n.about_model_message=\"\"),await this.sendRequest(\"POST\",o,n),t()}))})):console.error(`Invalid target ${e}. Valid targets are [${t}]`)):console.error(\"Please provide a valid target!\")},fetchData(){return new Promise((e=>chatgpt.getAccessToken().then((async t=>e(await this.sendRequest(\"GET\",t))))))},sendRequest(e,t,o){for(let e=0;e<arguments.length-1;e++)if(\"string\"==typeof arguments[e])return console.error(`Argument ${e+1} must be a string`);const n=[\"POST\",\"GET\"];return(e=(e||\"\").trim().toUpperCase())&&n.includes(e)?t?o&&\"object\"!=typeof o?console.error(`Invalid body data type. Got ${typeof o}, expected object`):new Promise(((n,s)=>{const a=new XMLHttpRequest;a.open(e,chatgpt.endpoints.openAI.instructions,!0),a.setRequestHeader(\"Accept-Language\",\"en-US\"),a.setRequestHeader(\"Authorization\",\"Bearer \"+t),\"POST\"==e&&a.setRequestHeader(\"Content-Type\",\"application/json\"),a.onload=()=>{const t=JSON.parse(a.responseText);return 422==a.status?s(\"\ud83e\udd16 chatgpt.js >> Character limit exceeded. Custom instructions can have a maximum length of 1500 characters.\"):403==a.status&&\"content_policy\"==t.detail.reason?s(\"\ud83e\udd16 chatgpt.js >> \"+t.detail.description):200!=a.status?s(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot contact custom instructions endpoint.\"):(console.info(`Custom instructions successfully contacted with method ${e}`),n(t||{}))},a.send(JSON.stringify(o)||\"\")})):console.error(\"Please provide a valid access token!\"):console.error(`Valid methods are ${n}`)},turnOff(){return new Promise((e=>chatgpt.getAccessToken().then((async t=>{const o=await this.fetchData();return o.enabled=!1,await this.sendRequest(\"POST\",t,o),e()}))))},turnOn(){return new Promise((e=>chatgpt.getAccessToken().then((async t=>{const o=await this.fetchData();return o.enabled=!0,await this.sendRequest(\"POST\",t,o),e()}))))},toggle(){return new Promise((e=>this.fetchData().then((async t=>(await(t.enabled?this.turnOff():this.turnOn()),e())))))}},isDarkMode:()=>document.documentElement.classList.contains(\"dark\"),isFullScreen:()=>chatgpt.browser.isFullScreen(),async isIdle(e=null){const t={childList:!0,subtree:!0},o=e?new Promise((t=>setTimeout((()=>t(!1)),e))):null,n=(async()=>(await new Promise((e=>{document.querySelector(chatgpt.selectors.chatDivs.msg)?e():new MutationObserver(((t,o)=>{document.querySelector(chatgpt.selectors.chatDivs.msg)&&(o.disconnect(),e())})).observe(document.body,t)})),await new Promise((e=>new MutationObserver(((t,o)=>{chatgpt.getStopBtn()&&(o.disconnect(),e())})).observe(document.body,t))),new Promise((e=>new MutationObserver(((t,o)=>{chatgpt.getStopBtn()||(o.disconnect(),e(!0))})).observe(document.body,t)))))();return await(o?Promise.race([n,o]):n)},async isLoaded(e=null){const t=e?new Promise((t=>setTimeout((()=>t(!1)),e))):null,o=new Promise((e=>{chatgpt.getNewChatBtn()?e(!0):new MutationObserver(((t,o)=>{chatgpt.getNewChatBtn()&&(o.disconnect(),e(!0))})).observe(document.documentElement,{childList:!0,subtree:!0})}));return await(t?Promise.race([o,t]):o)},isLightMode:()=>document.documentElement.classList.contains(\"light\"),isTempChat:()=>\"?temporary-chat=true\"==location.search,isTyping(){return!!this.getStopButton()},login(){window.location.href=\"https://chat.openai.com/auth/login\"},logout(){window.location.href=\"https://chat.openai.com/auth/logout\"},menu:{elems:[],append(e,t={}){const o=[\"button\",\"dropdown\"];if(!e||\"string\"!=typeof e)return console.error(\"\ud83e\udd16 chatgpt.js >> Please supply a valid string element name!\");if(e=e.toLowerCase(),!o.includes(e))return console.error(`\ud83e\udd16 chatgpt.js >> Invalid element! Valid elems are [${o}]`);const n=document.createElement(\"dropdown\"==e?\"select\":\"button\"==e?\"a\":e);if(n.id=Math.floor(1e6*chatgpt.randomFloat())+Date.now(),\"button\"==e){n.textContent=t?.label&&\"string\"==typeof t.label?t.label:\"chatgpt.js button\";const e=document.createElement(\"img\");e.src=t?.icon&&\"string\"==typeof t.icon?t.icon:`${chatgpt.endpoints.assets}/starters/chrome/extension/icons/icon128.png`,e.width=18,n.firstChild.before(e),n.onclick=t?.onclick&&\"function\"==typeof t.onclick?t.onclick:function(){}}else if(\"dropdown\"==e){if(t?.items&&Array.isArray(t.items)&&t.items.length||(t.items=[{text:\"\ud83e\udd16 chatgpt.js option\",value:\"chatgpt.js option value\"}]),!t.items.every((e=>\"object\"==typeof e)))return console.error(\"'items' must be an array of objects!\");n.style=\"background-color: #000; width: 100%; border: none;\",t.items.forEach((e=>{const t=document.createElement(\"option\");t.textContent=e?.text,t.value=e?.value,n.add(t)}))}const s=()=>{const e=document.querySelectorAll(\"a[role=menuitem]\");let t;for(const o of e)if(\"Settings\"==o.textContent){t=o.classList;break}const o=e[0].parentNode;chatgpt.menu.elems.forEach((e=>{if(e.setAttribute(\"class\",t),!o.contains(e))try{o.firstChild.before(e)}catch(e){console.error(e)}}))};this.elems.push(n);const a=document.querySelector(\"nav button[id*=headless]\");return this.addedEvent||(a?.addEventListener(\"click\",(()=>setTimeout(s,25))),this.addedEvent=!0),n.id},close(){try{document.querySelector(\"nav [id*=menu-button][aria-expanded=true]\").click()}catch(e){console.error(e.message)}},open(){try{document.querySelector(\"nav [id*=menu-button][aria-expanded=false]\").click()}catch(e){console.error(e.message)}}},minify(){chatgpt.code.minify()},notify(e,t,o,n){o=o?+o:1.75;const s=.35,a=document.createElement(\"div\");a.id=Math.floor(1e6*chatgpt.randomFloat())+Date.now(),a.classList.add(\"chatgpt-notif\"),a.textContent=e,document.body.append(a);const r=document.createElement(\"div\");r.title=\"Dismiss\",r.classList.add(\"notif-close-btn\",\"no-mobile-tap-outline\");const i=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");i.setAttribute(\"height\",\"8px\"),i.setAttribute(\"viewBox\",\"0 0 14 14\"),i.setAttribute(\"fill\",\"none\"),i.style.height=i.style.width=\"8px\";const c=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");c.setAttribute(\"fill-rule\",\"evenodd\"),c.setAttribute(\"clip-rule\",\"evenodd\"),c.setAttribute(\"fill\",\"white\"),c.setAttribute(\"d\",\"M13.7071 1.70711C14.0976 1.31658 14.0976 0.683417 13.7071 0.292893C13.3166 -0.0976312 12.6834 -0.0976312 12.2929 0.292893L7 5.58579L1.70711 0.292893C1.31658 -0.0976312 0.683417 -0.0976312 0.292893 0.292893C-0.0976312 0.683417 -0.0976312 1.31658 0.292893 1.70711L5.58579 7L0.292893 12.2929C-0.0976312 12.6834 -0.0976312 13.3166 0.292893 13.7071C0.683417 14.0976 1.31658 14.0976 1.70711 13.7071L7 8.41421L12.2929 13.7071C12.6834 14.0976 13.3166 14.0976 13.7071 13.7071C14.0976 13.3166 14.0976 12.6834 13.7071 12.2929L8.41421 7L13.7071 1.70711Z\"),i.append(c),r.append(i),a.append(r),a.isTop=!t||!/low|bottom/i.test(t),a.isRight=!t||!/left/i.test(t),a.quadrant=(a.isTop?\"top\":\"bottom\")+(a.isRight?\"Right\":\"Left\");const l=1735767823541;let d=document.querySelector(\"#chatgpt-notif-style\");(!d||parseInt(d.getAttribute(\"last-updated\"),10)<l)&&(d||(d=document.createElement(\"style\"),d.id=\"chatgpt-notif-style\",d.setAttribute(\"last-updated\",l.toString()),document.head.append(d)),d.textContent=`.chatgpt-notif {font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"PingFang SC\",\"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", sans-serif ;.no-mobile-tap-outline { outline: none ; -webkit-tap-highlight-color: transparent }background-color: black ; padding: 10px 13px 10px 18px ;border-radius: 11px ; border: 1px solid #f5f5f7 ;opacity: 0 ; position: fixed ; z-index: 9999 ; font-size: 1.8rem ; color: white ;user-select: none ; -webkit-user-select: none ; -moz-user-select: none ; -o-user-select: none ;-ms-user-select: none ;transform: translateX(${a.isRight?\"\":\"-\"}35px) ;`+(n?`--shadow: -8px 13px 25px 0 ${/\\b(?:shadow|on)\\b/i.test(n)?\"gray\":n};\\n                        box-shadow: var(--shadow) ; -webkit-box-shadow: var(--shadow) ; -moz-box-shadow: var(--shadow)`:\"\")+\"}.notif-close-btn {\\n                      cursor: pointer ; float: right ; position: relative ; right: -4px ; margin-left: -3px ;display: grid }@keyframes notif-zoom-fade-out { 0% { opacity: 1 ; transform: scale(1) }15% { opacity: 0.35 ; transform: rotateX(-27deg) scale(1.05) }45% { opacity: 0.05 ; transform: rotateX(-81deg) }100% { opacity: 0 ; transform: rotateX(-180deg) scale(1.15) }}\");let g=JSON.parse(localStorage.notifyProps);g.queue[a.quadrant].push(a.id),localStorage.notifyProps=JSON.stringify(g),a.style.top=a.isTop?23..toString()+\"px\":\"\",a.style.bottom=a.isTop?\"\":23..toString()+\"px\",a.style.right=a.isRight?27..toString()+\"px\":\"\",a.style.left=a.isRight?\"\":27..toString()+\"px\";const h=g.queue[a.quadrant];if(h.length>1)try{for(const e of h.slice(0,-1)){const t=document.getElementById(e),o=t.style.top?\"top\":\"bottom\",n=+parseInt(t.style[o])+5+t.getBoundingClientRect().height;t.style[o]=`${n}px`}}catch(e){console.warn(\"Failed to re-position notification:\",e)}setTimeout((()=>{a.style.opacity=chatgpt.isDarkMode()?.8:.67,a.style.transform=\"translateX(0)\",a.style.transition=\"transform 0.15s ease, opacity 0.15s ease\"}),10);const p=()=>{a.style.animation=\"notif-zoom-fade-out 0.35s ease-out\",clearTimeout(u)},u=setTimeout(p,1e3*(s>o?0:o-s));return i.onclick=p,a.onanimationend=()=>{a.remove(),g=JSON.parse(localStorage.notifyProps),g.queue[a.quadrant].shift(),localStorage.notifyProps=JSON.stringify(g)},a},obfuscate(){chatgpt.code.obfuscate()},printAllFunctions(){const e={cmdPrompt:[\"#ff00ff\",\"#00ff00\"],objName:[\"#0611e9\",\"#f9ee16\"],methodName:[\"#005aff\",\"#ffa500\"],entryType:[\"#467e06\",\"#b981f9\"],srcMethod:[\"#ff0000\",\"#00ffff\"]};Object.keys(e).forEach((t=>{e[t][1]=e[t][1]||\"#\"+(16777215^Number(`0x1${e[t][0].replace(/^#/,\"\")}`)).toString(16).substring(1).toUpperCase()}));const t=[];for(const e in this)if(\"function\"==typeof this[e]){const o=!Object.keys(this).find((t=>Object.keys(this[t]).includes(this[e].name)))?\"chatgpt\":\"other\";t.push([o,e])}else if(\"object\"==typeof this[e])for(const o in this[e])\"function\"==typeof this[e][o]&&t.push([e,o]);t.sort(((e,t)=>e[0].localeCompare(t[0])||e[1].localeCompare(t[1])));const o=window.matchMedia(\"(prefers-color-scheme: dark)\").matches,n=\"font-family: monospace ; font-size: larger ; \";console.log(\"\\n%c\ud83e\udd16 chatgpt.js methods\\n\",\"font-family: sans-serif ; font-size: xxx-large ; font-weight: bold\");for(const s of t){const t=/chatgpt|other/.test(s[0]),a=\"chatgpt\"==s[0]?this[s[1]].name:\"other\"!=s[0]?s[0]+\".\"+s[1]:Object.keys(this).find((e=>Object.keys(this[e]).includes(this[s[1]].name)))+\".\"+this[s[1]].name,r=\"AsyncFunction\"==this[s[1]]?.constructor.name;console.log(\"%c>> %c\"+(t?\"\":`${s[0]}.%c`)+s[1]+\" - https://chatgptjs.org/userguide/\"+/(?:.*\\.)?(.*)/.exec(a)[1].toLowerCase()+(r?\"-async\":\"\")+\"\\n%c[%c\"+(\"chatgpt\"==s[0]&&s[1]==this[s[1]].name||!t?\"Function\":\"Alias of\")+\"%c: %c\"+a+\"%c]\",n+\"font-weight: bold ; color:\"+e.cmdPrompt[+o],n+\"font-weight: bold ;color:\"+e[t?\"methodName\":\"objName\"][+o],n+\"font-weight: \"+(t?\"initial\":\"bold\")+\";color:\"+(t?\"initial\":e.methodName[+o]),n+\"font-weight: \"+(t?\"bold\":\"initial\")+\";color:\"+(t?e.entryType[+o]:\"initial\"),n+\"font-weight: \"+(t?\"initial\":\"bold\")+\";color:\"+(t?\"initial\":e.entryType[+o]),n+(t?\"font-style: italic\":\"font-weight: initial\")+\";color:\"+(t?e.srcMethod[+o]:\"initial\"),n+(t?\"font-weight: initial\":\"font-style: italic\")+\";color:\"+(t?\"initial\":e.srcMethod[+o]),t?\"\":n+\"color: initial ; font-weight: initial\")}},randomFloat(){const e=window.crypto||window.msCrypto;return e?.getRandomValues(new Uint32Array(1))[0]/4294967295||Math.random()},refactor(){chatgpt.code.refactor()},regenerate(){chatgpt.response.regenerate()},renderHTML(e){const t=/<([a-z\\d]+)\\b([^>]*)>([\\s\\S]*?)<\\/\\1>/g,o=/(\\S+)=['\"]?((?:.(?!['\"]?\\s+\\S+=|[>']))+.)['\"]?/g,n=e.childNodes;chatgpt.renderHTML.preWrapSet||(e.style.whiteSpace=\"pre-wrap\",chatgpt.renderHTML.preWrapSet=!0,setTimeout((()=>chatgpt.renderHTML.preWrapSet=!1),100));for(const s of n)if(s.nodeType==Node.TEXT_NODE){const n=s.nodeValue,a=[...n.matchAll(t)];if(a.length>0){const t=a[0],[r,i,c,l]=t.slice(0,4),d=document.createElement(i);d.textContent=l;[...c.matchAll(o)].forEach((e=>{const t=e[1],o=e[2].replace(/['\"]/g,\"\");d.setAttribute(t,o)}));const g=chatgpt.renderHTML(d),h=document.createTextNode(n.substring(0,t.index)),p=document.createTextNode(n.substring(t.index+r.length));e.replaceChild(h,s),e.insertBefore(g,h.nextSibling),e.insertBefore(p,g.nextSibling)}}else s.nodeType==Node.ELEMENT_NODE&&chatgpt.renderHTML(s);return e},async resend(){chatgpt.send(await chatgpt.getChatData(\"latest\",\"msg\",\"user\",\"latest\"))},response:{continue(){try{chatgpt.getContinueBtn().click()}catch(e){console.error(e.message)}},get(){return this[\"getFrom\"+(location.href.startsWith(\"https://chatgpt.com/c/\")?\"DOM\":\"API\")].apply(null,arguments)},getFromAPI:(e,t)=>(e=e||\"latest\",t=t||\"latest\",chatgpt.getChatData(e,\"msg\",\"chatgpt\",t)),getFromDOM(e){const t=document.querySelectorAll(\"div[data-message-author-role=assistant]\"),o=e.toString().toLowerCase();let n=\"\";if(!t.length)return console.error(\"No conversation found!\");if(/last|final/.test(o))n=t[t.length-1].textContent;else{n=t[(Number.isInteger(e)?e:/^\\d+/.test(o)?/^\\d+/.exec(o)[0]:(/^(?:1|one|fir)(?:st)?$/.test(o)?1:/^(?:2|tw(?:o|en|el(?:ve|f))|seco)(?:nd|t[yi])?(?:e?th)?$/.test(o)?2:/^(?:3|th(?:ree|ir?))(?:rd|teen|t[yi])?(?:e?th)?$/.test(o)?3:/^(?:4|fou?r)(?:teen|t[yi])?(?:e?th)?$/.test(o)?4:/^(?:5|fi(?:ve|f))(?:teen|t[yi])?(?:e?th)?$/.test(o)?5:/^(?:6|six)(?:teen|t[yi])?(?:e?th)?$/.test(o)?6:/^(?:7|seven)(?:teen|t[yi])?(?:e?th)?$/.test(o)?7:/^(?:8|eight?)(?:teen|t[yi])?(?:e?th)?$/.test(o)?8:/^(?:9|nine?)(?:teen|t[yi])?(?:e?th)?$/.test(o)?9:/^(?:10|ten)(?:th)?$/.test(o)?10:1)*(/(?:ty|ieth)$/.test(o)?10:1)+(/teen(?:th)?$/.test(o)?10:0))-1].textContent}return n=n.replace(/^ChatGPT(?:ChatGPT)?/,\"\"),n},getLast:()=>chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\"),regenerate(){try{chatgpt.getRegenerateBtn().click()}catch(e){console.error(e.message)}},stopGenerating(){try{chatgpt.getStopBtn().click()}catch(e){console.error(e.message)}}},reviewCode(){chatgpt.code.review()},scrollToBottom(){try{chatgpt.getScrollBtn().click()}catch(e){console.error(e.message)}},send(e,t=\"\"){for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string!`);const o=chatgpt.getChatBox();if(!o)return console.error(\"Chatbar element not found!\");const n=document.createElement(\"p\");n.textContent=e,o.querySelector(\"p\").replaceWith(n),o.dispatchEvent(new Event(\"input\",{bubbles:!0})),setTimeout((function e(){const n=chatgpt.getSendButton();n?.hasAttribute(\"disabled\")?setTimeout(e,222):\"click\"==t.toLowerCase()||chatgpt.browser.isMobile()?n.click():o.dispatchEvent(new KeyboardEvent(\"keydown\",{key:\"Enter\",bubbles:!0}))}),222)},sendInNewChat(e){if(\"string\"!=typeof e)return console.error(\"Message must be a string!\");try{chatgpt.getNewChatBtn().click()}catch(e){return console.error(e.message)}setTimeout((()=>chatgpt.send(e)),500)},settings:{scheme:{isDark:()=>document.documentElement.classList.contains(\"dark\"),isLight:()=>document.documentElement.classList.contains(\"light\"),set(e){const t=[\"dark\",\"light\",\"system\"];if(!e)return console.error(\"Please specify a scheme value!\");if(!t.includes(e))return console.error(`Invalid scheme value. Valid values are [${t}]`);let o=e;\"system\"==e&&(o=window.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\"),localStorage.setItem(\"theme\",e),console.info(`Scheme set to ${e.toUpperCase()}.`),document.documentElement.classList.contains(o)||this.toggle()},toggle(){const[e,t]=this.isDark()?[\"dark\",\"light\"]:[\"light\",\"dark\"];document.documentElement.classList.replace(e,t),document.documentElement.style.colorScheme=t,localStorage.setItem(\"theme\",t)}}},async sentiment(e,t){for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string.`);return chatgpt.send(\"What is the sentiment of the following text\"+(t?` towards the entity ${t},`:\"\")+\" from strongly negative to strongly positive?\\n\\n\"+e),console.info(\"Analyzing sentiment...\"),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")},setScheme(e){chatgpt.settings.scheme.set(e)},shareChat(e,t=\"clipboard\"){const o=[\"alert\",\"notify\",\"notification\",\"clipboard\",\"copy\"];if(!o.includes(t))return console.error(`Invalid method '${t}' passed. Valid methods are [${o}].`);return new Promise((o=>{chatgpt.getAccessToken().then((n=>{(t=>new Promise(((o,n)=>{const s=new XMLHttpRequest;chatgpt.getChatData(e).then((e=>{s.open(\"GET\",`${chatgpt.endpoints.openAI.chat}/${e.id}`,!0),s.setRequestHeader(\"Content-Type\",\"application/json\"),s.setRequestHeader(\"Authorization\",\"Bearer \"+t),s.onload=()=>200!=s.status?n(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot retrieve chat node.\"):o(JSON.parse(s.responseText).current_node),s.send()}))})))(n).then((s=>{((t,o)=>new Promise(((n,s)=>{const a=new XMLHttpRequest;chatgpt.getChatData(e).then((e=>{a.open(\"POST\",chatgpt.endpoints.openAI.share_create,!0),a.setRequestHeader(\"Content-Type\",\"application/json\"),a.setRequestHeader(\"Authorization\",\"Bearer \"+t),a.onload=()=>200!=a.status?s(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot initialize share chat.\"):n(JSON.parse(a.responseText)),a.send(JSON.stringify({current_node_id:o,conversation_id:e.id,is_anonymous:!0}))}))})))(n,s).then((e=>{((e,t)=>new Promise(((o,n)=>{const s=new XMLHttpRequest;s.open(\"PATCH\",`${chatgpt.endpoints.openAI.share}/${t.share_id}`,!0),s.setRequestHeader(\"Content-Type\",\"application/json\"),s.setRequestHeader(\"Authorization\",\"Bearer \"+e),s.onload=()=>200!=s.status?n(\"\ud83e\udd16 chatgpt.js >> Request failed. Cannot share chat.\"):(console.info(`Chat shared at '${t.share_url}'`),o()),s.send(JSON.stringify({share_id:t.share_id,highlighted_message_id:t.highlighted_message_id,title:t.title,is_public:!0,is_visible:t.is_visible,is_anonymous:t.is_anonymous}))})))(n,e).then((()=>{[\"copy\",\"clipboard\"].includes(t)?navigator.clipboard.writeText(e.share_url):chatgpt.alert(\"\ud83d\ude80 Share link created!\",`\"${e.title}\" is available at: <a target=\"blank\" rel=\"noopener\" href=\"${e.share_url}\">${e.share_url}</a>`,[function(){window.open(e.share_url,\"_blank\",\"noopener\")},function(){navigator.clipboard.writeText(e.share_url)}]),o(e.share_url)}))}))}))}))}))},showFooter(){chatgpt.footer.show()},showHeader(){chatgpt.header.show()},sidebar:{elems:[],observer:{},activateObserver(){if(this.observer instanceof MutationObserver&&this.observer.disconnect(),!this.elems.length)return console.error(\"\ud83e\udd16 chatgpt.js >> No elems to append!\");let e;for(let t of document.querySelectorAll(chatgpt.selectors.links.sidebarItem))if(/.*chat/.exec(t.text)[0]){e=t.classList,t.parentNode.style.margin=\"2px 0\";break}this.elems.forEach((t=>{t.setAttribute(\"class\",e),t.style.maxHeight=t.style.minHeight=\"44px\",t.style.margin=\"2px 0\"}));const t=document.querySelector(chatgpt.selectors.chatHistory);if(!t)return console.error(\"Sidebar element not found!\");this.observer=new MutationObserver((e=>e.forEach((e=>{(\"childList\"==e.type&&e.addedNodes.length||\"attributes\"==e.type&&\"data-chatgptjs\"==e.attributeName)&&this.elems.forEach((e=>{if(!t.contains(e))try{t.querySelector(\"a\").parentNode.before(e)}catch(e){console.error(e)}}))})))),this.observer.observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0})},append(e,t={}){const o=[\"button\",\"dropdown\"];if(!e||\"string\"!=typeof e)return console.error(\"\ud83e\udd16 chatgpt.js >> Please supply a valid string element name!\");if(e=e.toLowerCase(),!o.includes(e))return console.error(`\ud83e\udd16 chatgpt.js >> Invalid element! Valid elems are [${o}]`);const n=document.createElement(\"dropdown\"==e?\"select\":e);if(n.id=Math.floor(1e6*chatgpt.randomFloat())+Date.now(),\"button\"==e){n.textContent=t?.label&&\"string\"==typeof t.label?t.label:\"chatgpt.js button\";const e=document.createElement(\"img\");e.src=t?.icon&&\"string\"==typeof t.icon?t.icon:`${chatgpt.endpoints.assets}/starters/chrome/extension/icons/icon128.png`,e.width=18,n.firstChild.before(e),n.onclick=t?.onclick&&\"function\"==typeof t.onclick?t.onclick:function(){}}else if(\"dropdown\"==e){if(t?.items&&Array.isArray(t.items)&&t.items.length||(t.items=[{text:\"\ud83e\udd16 chatgpt.js option\",value:\"chatgpt.js option value\"}]),!t.items.every((e=>\"object\"==typeof e)))return console.error(\"'items' must be an array of objects!\");t.items.forEach((e=>{const t=document.createElement(\"option\");t.textContent=e?.text,t.value=e?.value,n.add(t)}))}return\"dropdown\"==e&&(n.style.backgroundColor=\"var(--gray-900, rgb(32,33,35))\"),this.elems.push(n),this.activateObserver(),document.body.setAttribute(\"data-chatgptjs\",\"observer-trigger\"),n.id},exists:()=>!!chatgpt.getNewChatLink(),hide(){this.isOn()?this.toggle():console.info(\"Sidebar already hidden!\")},show(){this.isOff()?this.toggle():console.info(\"Sidebar already shown!\")},isOff(){return!this.isOn()},isOn(){const e=chatgpt.sidebar.exists()?document.querySelector(chatgpt.selectors.sidebar):null;return e?chatgpt.browser.isMobile()?\"hidden\"==document.documentElement.style.overflow:\"hidden\"!=e.style.visibility&&\"0px\"!=e.style.width:console.error(\"Sidebar element not found!\")||!1},toggle(){const e=document.querySelector(chatgpt.selectors.btns.sidebar);e||console.error(\"Sidebar toggle not found!\"),e.click()},async isLoaded(e=5e3){await chatgpt.isLoaded();const t=new Promise((t=>setTimeout((()=>t(!1)),e))),o=new Promise((e=>{chatgpt.getNewChatLink()?e(!0):new MutationObserver(((t,o)=>{chatgpt.getNewChatLink()&&(o.disconnect(),e(!0))})).observe(document.documentElement,{childList:!0,subtree:!0})}));return await Promise.race([o,t])}},startNewChat(){try{chatgpt.getNewChatBtn().click()}catch(e){console.error(e.message)}},stop(){chatgpt.response.stopGenerating()},async suggest(e,t){if(!e)return console.error(\"ideaType (1st argument) not supplied(e.g. 'gifts', 'names', 'recipes', etc.)\");for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string.`);return chatgpt.send(\"Suggest some names. \"+(t||\"\")),console.info(`Creating ${e}...`),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")},speak(e,{voice:t=2,pitch:o=2,speed:n=1.1,onend:s}={}){if(\"string\"!=typeof e)return console.error(\"Message must be a string!\");const a=[\"voice\",\"pitch\",\"speed\",\"onend\"];for(const e in arguments[1]){if(!a.includes(e))return console.error(`Invalid option '${e}'. Valid keys are: ${a}`);const t=arguments[1][e];if(\"onend\"!=e&&\"number\"!=typeof t&&!/^\\d+$/.test(t))return console.error(`Invalid ${e} value '${t}'. Must be a number!`);if(\"onend\"==e&&\"function\"!=typeof t)return console.error(`Invalid ${e} value. Must be a function!`)}try{const a=new SpeechSynthesisUtterance,r=speechSynthesis.getVoices();Object.assign(a,{text:e,voice:r[t],pitch:o,speed:n,onend:s}),speechSynthesis.speak(a)}catch(e){console.error(e)}},summarize:async e=>e?\"string\"!=typeof e?console.error(\"Text argument must be a string!\"):(chatgpt.send(\"Summarize the following text:\\n\\n\"+e),console.info(\"Summarizing text...\"),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")):console.error(\"Text (1st) argument not supplied. Pass some text!\"),toggleScheme(){chatgpt.settings.scheme.toggle()},async translate(e,t){if(!e)return console.error(\"Text (1st) argument not supplied. Pass some text!\");if(!t)return console.error(\"outputLang (2nd) argument not supplied. Pass a language!\");for(let e=0;e<arguments.length;e++)if(\"string\"!=typeof arguments[e])return console.error(`Argument ${e+1} must be a string!`);return chatgpt.send(`Translate the following text to ${t}. Only reply with the translation.\\n\\n${e}`),console.info(\"Translating text...\"),await chatgpt.isIdle(),chatgpt.getChatData(\"active\",\"msg\",\"chatgpt\",\"latest\")},unminify(){chatgpt.code.unminify()},uuidv4(){try{return crypto.randomUUID()}catch(e){let t=(new Date).getTime();return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,(e=>{const o=(t+window.crypto.getRandomValues(new Uint32Array(1))[0]/(Math.pow(2,32)-1)*16)%16|0;return t=Math.floor(t/16),(\"x\"==e?o:3&o|8).toString(16)}))}},writeCode(){chatgpt.code.write()}};chatgpt.scheme={...chatgpt.settings.scheme};const cjsBtnActions=[\"click\",\"get\"],cjsTargetTypes=[\"button\",\"link\",\"div\",\"response\"];for(const e of cjsBtnActions)chatgpt[`${e}Button`]=function(t){const o=/^[.#]/.test(t)?document.querySelector(t):/send/i.test(t)?document.querySelector(chatgpt.selectors.btns.send):/scroll/i.test(t)?document.querySelector(chatgpt.selectors.btns.scroll):function(){for(const e of document.querySelectorAll(\"button\"))if(e.textContent.toLowerCase().includes(t.toLowerCase()))return e;for(const e of document.querySelectorAll(chatgpt.selectors.links.sidebarItem))if(e.textContent.toLowerCase().includes(t.toLowerCase()))return e}();if(\"click\"!=e)return o;o.click()};const cjsFuncAliases=[[\"actAs\",\"act\",\"become\",\"persona\",\"premadePrompt\",\"preMadePrompt\",\"prePrompt\",\"rolePlay\",\"rp\"],[\"activateAutoRefresh\",\"activateAutoRefresher\",\"activateRefresher\",\"activateSessionRefresher\",\"autoRefresh\",\"autoRefresher\",\"autoRefreshSession\",\"refresher\",\"sessionRefresher\"],[\"continue\",\"continueChat\",\"continueGenerating\",\"continueResponse\"],[\"deactivateAutoRefresh\",\"deactivateAutoRefresher\",\"deactivateRefresher\",\"deactivateSessionRefresher\"],[\"detectLanguage\",\"getLanguage\"],[\"executeCode\",\"codeExecute\"],[\"exists\",\"isAvailable\",\"isExistent\",\"isPresent\"],[\"exportChat\",\"chatExport\",\"export\"],[\"getFooterDiv\",\"getFooter\"],[\"getHeaderDiv\",\"getHeader\"],[\"getLastPrompt\",\"getLastQuery\",\"getMyLastMessage\",\"getMyLastQuery\"],[\"getContinueButton\",\"getContinueGeneratingButton\"],[\"getScrollToBottomButton\",\"getScrollButton\"],[\"getStopButton\",\"getStopGeneratingButton\"],[\"getTextarea\",\"getTextArea\",\"getChatbar\",\"getChatBar\",\"getChatbox\",\"getChatBox\"],[\"getVoiceButton\",\"getVoiceModeButton\"],[\"isFullScreen\",\"isFullscreen\"],[\"isTempChat\",\"isIncognito\",\"isIncognitoMode\",\"isTempChatMode\"],[\"minify\",\"codeMinify\",\"minifyCode\"],[\"new\",\"newChat\",\"startNewChat\"],[\"obfuscate\",\"codeObfuscate\",\"obfuscateCode\"],[\"printAllFunctions\",\"showAllFunctions\"],[\"refactor\",\"codeRefactor\",\"refactorCode\"],[\"refreshReply\",\"regenerate\",\"regenerateReply\"],[\"refreshSession\",\"sessionRefresh\"],[\"renderHTML\",\"renderHtml\",\"renderLinks\",\"renderTags\"],[\"reviewCode\",\"codeReview\"],[\"send\",\"sendChat\",\"sendMessage\"],[\"sendInNewChat\",\"sendNewChat\"],[\"sentiment\",\"analyzeSentiment\",\"sentimentAnalysis\"],[\"startNewChat\",\"new\",\"newChat\"],[\"stop\",\"stopChat\",\"stopGenerating\",\"stopResponse\"],[\"suggest\",\"suggestion\",\"recommend\"],[\"toggleAutoRefresh\",\"toggleAutoRefresher\",\"toggleRefresher\",\"toggleSessionRefresher\"],[\"toggleScheme\",\"toggleMode\"],[\"translate\",\"translation\",\"translator\"],[\"unminify\",\"unminifyCode\",\"codeUnminify\"],[\"writeCode\",\"codeWrite\"]],cjsFuncSynonyms=[[\"account\",\"acct\"],[\"activate\",\"turnOn\"],[\"analyze\",\"check\",\"evaluate\",\"review\"],[\"ask\",\"send\",\"submit\"],[\"button\",\"btn\"],[\"continue\",\"resume\"],[\"chats\",\"history\"],[\"chat\",\"conversation\",\"convo\"],[\"clear\",\"delete\",\"remove\"],[\"data\",\"details\"],[\"deactivate\",\"deActivate\",\"turnOff\"],[\"execute\",\"interpret\",\"interpreter\",\"run\"],[\"firefox\",\"ff\"],[\"generating\",\"generation\"],[\"login\",\"logIn\",\"logOn\",\"signIn\",\"signOn\"],[\"logout\",\"logOut\",\"logOff\",\"signOff\",\"signOut\"],[\"message\",\"msg\"],[\"minify\",\"uglify\"],[\"refactor\",\"rewrite\"],[\"regenerate\",\"regen\"],[\"render\",\"parse\"],[\"reply\",\"response\"],[\"sentiment\",\"attitude\",\"emotion\",\"feeling\",\"opinion\",\"perception\"],[\"speak\",\"play\",\"say\",\"speech\",\"talk\",\"tts\"],[\"summarize\",\"tldr\"],[\"temp\",\"temporary\"],[\"typing\",\"generating\"],[\"unminify\",\"beautify\",\"prettify\",\"prettyPrint\"]];function toCamelCase(e){return e.map(((e,t)=>0==t?e:e[0].toUpperCase()+e.slice(1))).join(\"\")}!function e(t=chatgpt){for(const o in t)Object.prototype.hasOwnProperty.call(t,o)&&\"object\"==typeof t[o]&&e(t[o]);let o;do{o=!1;for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&\"function\"==typeof t[e]){t[e.toLowerCase()]=t[e],cjsFuncAliases.forEach((n=>{n.includes(e)&&n.forEach((n=>{t[n]||(t[n]=t[n.toLowerCase()]=t[e],o=!0)}))}));const n=e.split(/(?=[A-Z])/);n.forEach((s=>{cjsFuncSynonyms.filter((e=>e.includes(s.toLowerCase()))).flat().filter((e=>e!=s.toLowerCase())).forEach((a=>{const r=toCamelCase(n.map((e=>e==s?a:e)));t[r]||(t[r]=t[r.toLowerCase()]=t[e],o=!0)}))}))}}while(o)}();const consolePrefix=\"\ud83e\udd16 chatgpt.js >> \",ogError=console.error,ogInfo=console.info;console.error=(...e)=>{e[0].startsWith(consolePrefix)?ogError(...e):ogError(consolePrefix+e[0],...e.slice(1))},console.info=e=>{e.startsWith(consolePrefix)?ogInfo(e):ogInfo(consolePrefix+e)};try{window.chatgpt=chatgpt}catch(e){}try{module.exports=chatgpt}catch(e){}\n//# sourceMappingURL=/sm/405cd0e8d70970c61aa75ba7fed49795dd08315a2d66e0548ffc504ed1ab7e8a.map"
def run_bot(running):
    """Função para inicializar e rodar o bot."""
    SUBSCRIBED_STREAMS = []  # Lista de streams que o bot está inscrito (deixe vazio para todos os streams)
    bot = Bot(
        running,
        config.zulip_username,        # Substitua pelo seu nome de usuário do Zulip
        config.zulip_api_key,         # Substitua pela chave de API do Zulip
        config.key_word,              # Palavra-chave para o bot responder
        SUBSCRIBED_STREAMS,           # Streams para o bot se inscrever
        config.zulip_site             # URL do site do Zulip (opcional)
    )
    bot.main()

